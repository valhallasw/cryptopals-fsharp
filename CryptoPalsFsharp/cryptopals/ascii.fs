module Ascii

open cryptopals

let private asciitable = Array.ofSeq "??????????\n????????????????????? !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"
let swap (x, y) = (y, x)
let private invertedLookup = asciitable |> Array.indexed |> Array.map swap |> Map

let valToChar i = Array.item i asciitable
let charToVal i = invertedLookup.Item i

let istextchar v =
    let charval = int v
    (charval >= (int 'A') && charval <= (int 'Z')) ||
    (charval >= (int 'a') && charval <= (int 'z')) ||
    (charval = (int ' '))
    
let isprintable v =
    (v >= (int ' ')) && (v <= (int '~'))

let counttextchar: (string -> int) = Seq.where istextchar >> Seq.length

let charToByte (str: string):bytearray = Seq.map charToVal str 

let byteToChars (data: bytearray): string = data |> Seq.map valToChar |> Seq.map string |> String.concat ""
